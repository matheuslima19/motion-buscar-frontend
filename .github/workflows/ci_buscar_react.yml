name: CI Buscar React

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Passo 1: Checkout do código
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Clona o repositório completamente, necessário para PRs

      # Passo 2: Instalar dependências do React
      - name: Install dependencies
        run: npm install

      # Passo 3: Build da aplicação React
      - name: Build React app
        run: CI=false npm run build

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Passo 1: Configurar QEMU para build multi-plataforma
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Passo 2: Configurar Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Passo 3: Login no Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Passo 4: Checkout do código para Docker
      - name: Checkout code for Docker
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Garantir que o código é clonado completamente para o build Docker

      # Passo 5: Criar o arquivo domain.key a partir do segredo
      - name: Create domain.key from secret
        run: echo "${{ secrets.DOMAIN_KEY }}" > domain.key

      # Passo 6: Build e Push da Imagem Docker
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .  # Diretório de contexto para o Docker
          file: ./Dockerfile  # Caminho para o Dockerfile
          push: true  # Realiza o push para o Docker Hub
          tags: kauajuhrs/buscar-web:latest
